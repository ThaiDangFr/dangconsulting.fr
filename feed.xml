<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="fr"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://dangconsulting.fr/feed.xml" rel="self" type="application/atom+xml"/><link href="https://dangconsulting.fr/" rel="alternate" type="text/html" hreflang="fr"/><updated>2024-06-15T13:52:47+00:00</updated><id>https://dangconsulting.fr/feed.xml</id><title type="html">DangConsulting</title><subtitle>Blog sur les sujets liés à la tech </subtitle><entry><title type="html">Hashicorp Vault PKI secret engine</title><link href="https://dangconsulting.fr/blog/2024/vault-pki/" rel="alternate" type="text/html" title="Hashicorp Vault PKI secret engine"/><published>2024-06-15T12:00:00+00:00</published><updated>2024-06-15T12:00:00+00:00</updated><id>https://dangconsulting.fr/blog/2024/vault-pki</id><content type="html" xml:base="https://dangconsulting.fr/blog/2024/vault-pki/"><![CDATA[<h1 id="installer-client-vault-avec-asdf">installer client vault avec asdf</h1> <p>asdf permet d’installer des plugin, pour avoir des outils sous une certaine version</p> <p>exemple : awscli, k0s, kubectl, terraform, trivy, vault, yq</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>asdf plugin list          <span class="c"># list les plugin installés</span>
asdf update               <span class="c"># mise à jour de asdf</span>
asdf plugin update <span class="nt">--all</span>  <span class="c"># mise à jour de tous les plugins</span>


asdf plugin-add vault
asdf list all vault
asdf <span class="nb">install </span>vault 1.16.3 <span class="c"># install une version spécifique</span>

asdf global vault 1.16.3  <span class="c"># cette version sera dispo partout</span>
<span class="c">#asdf local vault 1.16.3  # =&gt; version dispo que dans le répertoire courant</span>
asdf current              <span class="c"># list les versions actuelles</span>


asdf plugin-update vault

</code></pre></div></div> <h1 id="pki-secret-engine">pki secret engine</h1> <ul> <li>permet de générer des certificats</li> <li>évite de créer à la main une clef privée, un csr, et la faire signer par une AC</li> <li>peut se placer en tant que AC intermédiaire</li> </ul> <p>créer une policy pour la pki</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">tee </span>pki-policy.hcl <span class="o">&lt;&lt;</span><span class="no">EOF</span><span class="sh">
# Enable secrets engine
path "sys/mounts/*" {
  capabilities = [ "create", "read", "update", "delete", "list" ]
}

# List enabled secrets engine
path "sys/mounts" {
  capabilities = [ "read", "list" ]
}

# Work with pki secrets engine
path "pki*" {
  capabilities = [ "create", "read", "update", "delete", "list", "sudo", "patch" ]
}
</span><span class="no">EOF

</span>vault policy write pki pki-policy.hcl
vault policy <span class="nb">read </span>pki
</code></pre></div></div>]]></content><author><name></name></author><category term="education"/><category term="tech"/><summary type="html"><![CDATA[Comment gérer ses certificats avec Vault]]></summary></entry></feed>